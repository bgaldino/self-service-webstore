{"ast":null,"code":"import _regeneratorRuntime from\"/Users/bgaldino/Downloads/self-service-webstore/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/bgaldino/Downloads/self-service-webstore/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"/Users/bgaldino/Downloads/self-service-webstore/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useState}from\"react\";import\"./Login.css\";// Used to log in the user by fetching the token\nfunction loginUser(_x){return _loginUser.apply(this,arguments);}function _loginUser(){_loginUser=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(credentials){var requestHeaders,formdata,requestOptions,token;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:requestHeaders=new Headers();formdata=new FormData();formdata.append(\"grant_type\",\"password\");// Configure these fields in the Salesforce Org\nformdata.append(\"client_id\",\"\".concat(process.env.REACT_APP_CONNECTED_APP_ID));formdata.append(\"client_secret\",\"\".concat(process.env.REACT_APP_CONNECTED_APP_SECRET));// Takes in the data provided from the user in the form\nformdata.append(\"username\",credentials.username);formdata.append(\"password\",credentials.password);requestOptions={method:\"POST\",headers:requestHeaders,body:formdata,redirect:\"follow\"};token=\"\";_context2.next=11;return fetch(\"\".concat(process.env.REACT_APP_API_ENDPOINT,\"/services/oauth2/token\"),requestOptions).then(function(response){return response.text();}).then(function(result){// If a valid token is returned, save the value and return it\nvar json=JSON.parse(result);if(json.error){return token;}else{var parsedResult=JSON.parse(result);token=parsedResult.access_token;localStorage.setItem(\"userid\",parsedResult.id.split('/')[5]);}}).catch(function(error){return console.log(\"error\",error);});case 11:return _context2.abrupt(\"return\",token);case 12:case\"end\":return _context2.stop();}}},_callee2);}));return _loginUser.apply(this,arguments);}export default function Login(_ref){var setToken=_ref.setToken;var _useState=useState(),_useState2=_slicedToArray(_useState,2),username=_useState2[0],setUserName=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];// Triggered when the user presses the log in button\nvar handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var token;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();setError();_context.next=4;return loginUser({username:username,password:password});case 4:token=_context.sent;// If a valid token is returned, set it for use throughout the application\nif(token.length===0){setError(\"Invalid login. Please try again.\");}else{setToken(token);}case 6:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x2){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",{className:\"login-wrapper\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Sign in\"),/*#__PURE__*/React.createElement(\"form\",{className:\"login-form\",onSubmit:handleSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"login-inputs\"},/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"p\",null,\"Username\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",onChange:function onChange(e){return setUserName(e.target.value);}}))),/*#__PURE__*/React.createElement(\"div\",{className:\"login-inputs\"},/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"p\",null,\"Password\"),/*#__PURE__*/React.createElement(\"input\",{type:\"password\",onChange:function onChange(e){return setPassword(e.target.value);}}))),/*#__PURE__*/React.createElement(\"div\",null,error?/*#__PURE__*/React.createElement(\"p\",{style:{color:\"red\",textAlign:\"center\",fontSize:\"2vh\"}},error):\"\",/*#__PURE__*/React.createElement(\"button\",{style:{backgroundColor:\"rgb(0, 112, 210)\",width:\"100%\"},class:\"btn btn-primary\",type:\"submit\"},\"Log in\"))));}","map":{"version":3,"sources":["/Users/bgaldino/Downloads/self-service-webstore/frontend/src/components/Login/Login.js"],"names":["React","useState","loginUser","credentials","requestHeaders","Headers","formdata","FormData","append","process","env","REACT_APP_CONNECTED_APP_ID","REACT_APP_CONNECTED_APP_SECRET","username","password","requestOptions","method","headers","body","redirect","token","fetch","REACT_APP_API_ENDPOINT","then","response","text","result","json","JSON","parse","error","parsedResult","access_token","localStorage","setItem","id","split","catch","console","log","Login","setToken","setUserName","setPassword","setError","handleSubmit","e","preventDefault","length","target","value","color","textAlign","fontSize","backgroundColor","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Login.css\";\n\n// Used to log in the user by fetching the token\nasync function loginUser(credentials) {\n  let requestHeaders = new Headers();\n\n  let formdata = new FormData();\n  formdata.append(\"grant_type\", \"password\");\n  // Configure these fields in the Salesforce Org\n  formdata.append(\"client_id\", `${process.env.REACT_APP_CONNECTED_APP_ID}`);\n  formdata.append(\n    \"client_secret\",\n    `${process.env.REACT_APP_CONNECTED_APP_SECRET}`\n  );\n\n  // Takes in the data provided from the user in the form\n  formdata.append(\"username\", credentials.username);\n  formdata.append(\"password\", credentials.password);\n\n  let requestOptions = {\n    method: \"POST\",\n    headers: requestHeaders,\n    body: formdata,\n    redirect: \"follow\",\n  };\n\n  let token = \"\";\n  await fetch(\n    `${process.env.REACT_APP_API_ENDPOINT}/services/oauth2/token`,\n    requestOptions\n  )\n    .then((response) => response.text())\n    .then((result) => {\n      // If a valid token is returned, save the value and return it\n      let json = JSON.parse(result);\n      if (json.error) {\n        return token;\n      } else {\n        const parsedResult = JSON.parse(result);\n        token = parsedResult.access_token;\n        localStorage.setItem(\"userid\", parsedResult.id.split('/')[5]);\n      }\n    })\n    .catch((error) => console.log(\"error\", error));\n\n  return token;\n}\n\nexport default function Login({ setToken }) {\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n  const [error, setError] = useState();\n\n  // Triggered when the user presses the log in button\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError();\n    const token = await loginUser({\n      username,\n      password,\n    });\n    // If a valid token is returned, set it for use throughout the application\n    if (token.length === 0) {\n      setError(\"Invalid login. Please try again.\");\n    } else {\n      setToken(token);\n    }\n  };\n\n  return (\n    <div className=\"login-wrapper\">\n      <h3>Sign in</h3>\n      <form className=\"login-form\" onSubmit={handleSubmit}>\n        <div className=\"login-inputs\">\n          <label>\n            <p>Username</p>\n            <input type=\"text\" onChange={(e) => setUserName(e.target.value)} />\n          </label>\n        </div>\n\n        <div className=\"login-inputs\">\n          <label>\n            <p>Password</p>\n            <input\n              type=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </label>\n        </div>\n        <div>\n          {error ? (\n            <p\n              style={{\n                color: \"red\",\n                textAlign: \"center\",\n                fontSize: \"2vh\",\n              }}\n            >\n              {error}\n            </p>\n          ) : (\n            \"\"\n          )}\n          <button\n            style={{ backgroundColor: \"rgb(0, 112, 210)\", width: \"100%\" }}\n            class=\"btn btn-primary\"\n            type=\"submit\"\n          >\n            Log in\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}