{"ast":null,"code":"import _regeneratorRuntime from\"/Users/bgaldino/Downloads/self-service-webstore/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/bgaldino/Downloads/self-service-webstore/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/bgaldino/Downloads/self-service-webstore/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/Users/bgaldino/Downloads/self-service-webstore/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/bgaldino/Downloads/self-service-webstore/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import Button from\"@material-ui/core/Button\";import Dialog from\"@material-ui/core/Dialog\";import DialogActions from\"@material-ui/core/DialogActions\";import DialogContent from\"@material-ui/core/DialogContent\";import DialogContentText from\"@material-ui/core/DialogContentText\";import DialogTitle from\"@material-ui/core/DialogTitle\";import Snackbar from\"@material-ui/core/Snackbar\";import MuiAlert from\"@material-ui/lab/Alert\";import useToken from\"./useToken\";import analytics from\"../images/demoAnalytics.png\";import ownedImg from\"../images/owned.png\";var TERM_DEFINED=\"TermDefined\";var ONE_TIME=\"OneTime\";var EVERGREEN=\"Evergreen\";export default function Home(_ref){var setCart=_ref.setCart,cart=_ref.cart;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];// State of popup dialog\nvar _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),selectedProduct=_useState4[0],setSelectedProduct=_useState4[1];// Product data for popup\nvar _useState5=useState(1),_useState6=_slicedToArray(_useState5,2),selectedQuantity=_useState6[0],setSelectedQuantity=_useState6[1];// Quantity to use for popup\nvar _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),snackbarOpen=_useState8[0],setSnackbarOpen=_useState8[1];// Add to cart confirmation snackbar\nvar _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),products=_useState10[0],setProducts=_useState10[1];// Array of all products\nvar _useToken=useToken(),token=_useToken.token,setToken=_useToken.setToken;// Auth token\nvar _useState11=useState(true),_useState12=_slicedToArray(_useState11,2),loading=_useState12[0],setLoading=_useState12[1];var _React$useState=React.useState(),_React$useState2=_slicedToArray(_React$useState,2),searchTerm=_React$useState2[0],setSearchTerm=_React$useState2[1];// Real time user input\nvar _React$useState3=React.useState(),_React$useState4=_slicedToArray(_React$useState3,2),currentSearch=_React$useState4[0],setCurrentSearch=_React$useState4[1];// Saved search term after user hits submit\n// Updates whenever there is a change to the search box\nvar handleSearchChange=function handleSearchChange(e){setSearchTerm(e.target.value);};// Handler for the search button being clicked\nfunction handleSearchSubmit(){return _handleSearchSubmit.apply(this,arguments);}// Used to handle a change in quantity for adding an item to the cart\nfunction _handleSearchSubmit(){_handleSearchSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoading(true);setCurrentSearch(searchTerm);_context.next=4;return populateProductData();case 4:case\"end\":return _context.stop();}}},_callee);}));return _handleSearchSubmit.apply(this,arguments);}var handleQuantityChange=function handleQuantityChange(e){var quantity=e.target.validity.valid?e.target.value:selectedQuantity;setSelectedQuantity(quantity);};// Confirmation after items have been added to the cart\nfunction Alert(props){return/*#__PURE__*/React.createElement(MuiAlert,Object.assign({elevation:6,variant:\"filled\"},props));}// Used to get all active pricebook entries for an org\nfunction fetchPricebookEntryData(){return _fetchPricebookEntryData.apply(this,arguments);}// Creates the request body for the pricing engine API using all pricebook entries\nfunction _fetchPricebookEntryData(){_fetchPricebookEntryData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var pbeData,requestHeaders,requestOptions,requestUrl;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:pbeData=[];requestHeaders=new Headers();// Use the token acquired at login\nrequestHeaders.append(\"Authorization\",\"Bearer \"+token);requestHeaders.append(\"Content-Type\",\"application/json\");requestOptions={method:\"GET\",headers:requestHeaders,redirect:\"follow\"};requestUrl=\"\".concat(process.env.REACT_APP_API_ENDPOINT,\"/services/data/v\").concat(process.env.REACT_APP_API_VERSION,\"/queryAll/?q=SELECT CurrencyIsoCode,Id,IsActive,Name,Pricebook2Id,Product2Id,Product2.DisplayUrl,Product2.Description, ProductSellingModelId,ProductSellingModel.Name,ProductSellingModel.PricingTerm,ProductSellingModel.PricingTermUnit,ProductSellingModel.SellingModelType FROM PricebookEntry WHERE Pricebook2Id = '\",\"\".concat(process.env.REACT_APP_PRICEBOOK_ID),\"' AND IsActive = true AND CurrencyIsoCode = 'USD'\");// If the user has searched for something, add it to the request URL\nif(searchTerm){requestUrl+=\" AND Name LIKE '\".concat(searchTerm,\"%25'\");}_context3.next=9;return fetch(requestUrl,requestOptions).then(function(response){return response.text();}).then(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(result){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:pbeData=JSON.parse(result).records;_context2.next=3;return populatePrices(pbeData,requestHeaders);case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x3){return _ref2.apply(this,arguments);};}()).catch(function(error){return console.log(\"error\",error);});case 9:case\"end\":return _context3.stop();}}},_callee3);}));return _fetchPricebookEntryData.apply(this,arguments);}function constructPricingBody(data){// Initial body\nvar raw={listPricebookId:\"\".concat(process.env.REACT_APP_PRICEBOOK_ID),candidatePricebookIds:[\"\".concat(process.env.REACT_APP_PRICEBOOK_ID)],pricingFlow:\"GET_CATALOG_PRICE\",roundingMode:\"RoundHalfUp\",graph:{graphId:\"1\",records:[{referenceId:\"ref_sales_txn\",record:{attributes:{type:\"SalesTransaction\"},CurrencyIsoCode:\"USD\"}}]}};// Go through pricebook entries and construct a body for each one\nvar index=1;for(index;index<=data.length;index++){var pbe=data[index-1];// Additional data processing to add necessary fields to the pbe\npbe.sellingModel=pbe.ProductSellingModel.SellingModelType;pbe.pricingTermUnit=pbe.ProductSellingModel.PricingTermUnit;pbe.pricingTerm=parseInt(pbe.ProductSellingModel.PricingTerm);pbe.description=pbe.Product2.Description;pbe.img=pbe.Product2.DisplayUrl;// Create an entry for 1 of each product\nvar entry={referenceId:\"ref_sales_txn_item\"+index,record:{attributes:{type:\"SalesTransactionItem\"},CurrencyIsoCode:\"USD\",SalesTransactionId:\"@{ref_sales_txn.Id}\",ProductId:pbe.Product2Id,Quantity:\"1.0\",ProductSellingModelId:pbe.ProductSellingModelId}};raw.graph.records.push(entry);}return JSON.stringify(raw);}// Calls the pricing engine API using the request body constructed from pricebook entry data\nfunction populatePrices(_x,_x2){return _populatePrices.apply(this,arguments);}// Waits for API calls to finish and product data to populate before terminating loading\nfunction _populatePrices(){_populatePrices=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(data,requestHeaders){var pricedProducts,requestBody,requestOptions;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:pricedProducts=[];// Get the full request body to be used for the API call\nrequestBody=constructPricingBody(data);requestOptions={method:\"POST\",headers:requestHeaders,body:requestBody,redirect:\"follow\"};_context4.next=5;return fetch(\"\".concat(process.env.REACT_APP_API_ENDPOINT,\"/services/data/v\").concat(process.env.REACT_APP_API_VERSION,\"/commerce/pricing/salestransaction/actions/calculate-price\"),requestOptions).then(function(response){return response.text();}).then(function(result){var pricingData=JSON.parse(result);var index=1;for(index;index<=data.length;index++){var pbe=data[index-1];// Get the ListPrice value and round it to two decimal places\n// Get the ListPrice value and round it to two decimal places\nvar price=pricingData.records[index].record.ListPrice;pbe.price=(Math.round(price*100)/100).toFixed(2);pricedProducts.push(pbe);}}).catch(function(error){return console.log(\"error\",error);});case 5:setProducts(pricedProducts);// Set the products array after the prices of the products are set\ncase 6:case\"end\":return _context4.stop();}}},_callee4);}));return _populatePrices.apply(this,arguments);}function populateProductData(){return _populateProductData.apply(this,arguments);}function _populateProductData(){_populateProductData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return fetchPricebookEntryData();case 2:setLoading(false);case 3:case\"end\":return _context5.stop();}}},_callee5);}));return _populateProductData.apply(this,arguments);}useEffect(function(){populateProductData();localStorage.setItem(\"cart\",JSON.stringify(cart));// Saves state of cart\n},[cart]);// Reset values after the popup is closed for an item\nvar handleDialogClose=function handleDialogClose(){setOpen(false);setSelectedProduct(null);setSelectedQuantity(1);};var handleSnackbarOpen=function handleSnackbarOpen(){setSnackbarOpen(true);};var handleSnackbarClose=function handleSnackbarClose(event,reason){if(reason===\"clickaway\"){return;}setSnackbarOpen(false);};// Used to facilitate adding items to the cart from the homepage\nvar addToCart=function addToCart(){var newCart=_toConsumableArray(cart);var quantToAdd=parseInt(selectedQuantity);// Check if the item already exists in the cart\nvar itemInCart=newCart.find(function(item){return selectedProduct.Name===item.Name;});if(itemInCart){itemInCart.quantity+=quantToAdd;// Update quantity if already present\n}else{// Otherwise create a new item and add to the cart\nitemInCart=_objectSpread(_objectSpread({},selectedProduct),{},{quantity:quantToAdd});newCart.push(itemInCart);}setCart(newCart);handleDialogClose();handleSnackbarOpen();};// Used to swap wording for pricing term units\nfunction convertUnitTerm(term){switch(term){case\"Days\":return\"daily\";case\"Months\":return\"monthly\";case\"Years\":return\"yearly\";}return term;}// Maps all the products to cards\nvar itemList=products.map(function(product){return/*#__PURE__*/React.createElement(\"div\",{className:\"card\",key:product.Id},/*#__PURE__*/React.createElement(\"div\",{className:\"card-border\"}),product.img&&/*#__PURE__*/React.createElement(\"div\",{className:\"card-image\"},/*#__PURE__*/React.createElement(\"img\",{src:product.img,alt:product.title})),/*#__PURE__*/React.createElement(\"span\",{to:\"/\",className:\"btn-floating halfway-fab waves-effect waves-light green\",style:{right:\"14px\",bottom:\"10px\"},onClick:function onClick(){setSelectedProduct(product);setOpen(true);}},/*#__PURE__*/React.createElement(\"i\",{className:\"material-icons\"},\"add\")),/*#__PURE__*/React.createElement(\"div\",{className:\"card-content\"},/*#__PURE__*/React.createElement(\"span\",{className:\"card-title\"},product.Name),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"i\",null,product.description),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"h6\",null,/*#__PURE__*/React.createElement(\"b\",null,\"$\",product.price,\" \",product.sellingModel==EVERGREEN&&convertUnitTerm(product.pricingTermUnit),\" \",product.sellingModel===TERM_DEFINED&&/*#__PURE__*/React.createElement(\"span\",null,\"for \",product.pricingTerm,\" \",product.pricingTermUnit.toLowerCase())))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null)),selectedProduct?/*#__PURE__*/React.createElement(Dialog,{open:open,onClose:handleDialogClose,\"aria-labelledby\":\"alert-dialog-title\",\"aria-describedby\":\"alert-dialog-description\"},/*#__PURE__*/React.createElement(DialogTitle,{id:\"alert-dialog-title\"},selectedProduct.Name),/*#__PURE__*/React.createElement(DialogContent,null,/*#__PURE__*/React.createElement(DialogContentText,{style:{color:\"black\"}},\"Price: $\",selectedProduct.price,\" \",selectedProduct.sellingModel!=ONE_TIME&&convertUnitTerm(selectedProduct.pricingTermUnit),\" \"),/*#__PURE__*/React.createElement(DialogContentText,{style:{color:\"black\"}},selectedProduct.sellingModel==TERM_DEFINED&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",null,\"Term: \",selectedProduct.pricingTerm,\" \",selectedProduct.pricingTermUnit.toLowerCase())),\" \")),/*#__PURE__*/React.createElement(DialogContent,null,/*#__PURE__*/React.createElement(DialogContentText,{style:{color:\"black\"}},\"Quantity:\",/*#__PURE__*/React.createElement(\"input\",{style:{width:\"35%\",textAlign:\"center\"},type:\"text\",pattern:\"[1-9][0-9]*\",onInput:handleQuantityChange,value:selectedQuantity}))),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(Button,{onClick:handleDialogClose,color:\"primary\"},\"Cancel\"),/*#__PURE__*/React.createElement(Button,{onClick:addToCart,color:\"primary\",autoFocus:true},\"Add to cart\"))):\"\",/*#__PURE__*/React.createElement(Snackbar,{open:snackbarOpen,autoHideDuration:6000,onClose:handleSnackbarClose},/*#__PURE__*/React.createElement(Alert,{onClose:handleSnackbarClose,severity:\"success\"},\"Item added to cart!\"))));});return/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"page-header\"},/*#__PURE__*/React.createElement(\"div\",{style:{'padding-left':'1em'}},/*#__PURE__*/React.createElement(\"h5\",null,\"Store\"),\"Hello \",localStorage.getItem('userName'),\", welcome to SmartBytes web store.\"),/*#__PURE__*/React.createElement(\"img\",{className:\"header-image\",src:analytics})),/*#__PURE__*/React.createElement(\"h5\",{className:\"center\",style:{marginTop:\"3%\"}},\"Products\"),/*#__PURE__*/React.createElement(\"div\",{style:{margin:\"auto\",width:\"35%\"}},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Search for a product\",value:searchTerm,onChange:handleSearchChange}),/*#__PURE__*/React.createElement(\"button\",{style:{position:\"absolute\",color:\"white\",backgroundColor:\"#13334C\",marginLeft:\"1vw\"},type:\"button\",className:\"btn btn-default\",onClick:handleSearchSubmit},\"Search\")),!currentSearch?/*#__PURE__*/React.createElement(\"h6\",{style:{textAlign:\"center\"}},\"Showing all results\"):/*#__PURE__*/React.createElement(\"h5\",{style:{textAlign:\"center\"}},\"Showing results for \\\"\",currentSearch,\"\\\"\"),!loading?/*#__PURE__*/React.createElement(\"div\",null,products.length===0?/*#__PURE__*/React.createElement(\"h5\",{style:{textAlign:\"center\"}},\"No products found.\"):/*#__PURE__*/React.createElement(\"div\",{className:\"box\",style:{marginTop:\"4vh\",justifyContent:\"space-evenly\",marginBottom:\"10vh\"}},itemList)):/*#__PURE__*/React.createElement(\"img\",{style:{margin:\"auto\",display:\"flex\"},src:\"https://miro.medium.com/max/1080/0*DqHGYPBA-ANwsma2.gif\"}));}","map":{"version":3,"sources":["/Users/bgaldino/Downloads/self-service-webstore/frontend/src/components/Home.js"],"names":["React","useState","useEffect","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Snackbar","MuiAlert","useToken","analytics","ownedImg","TERM_DEFINED","ONE_TIME","EVERGREEN","Home","setCart","cart","open","setOpen","selectedProduct","setSelectedProduct","selectedQuantity","setSelectedQuantity","snackbarOpen","setSnackbarOpen","products","setProducts","token","setToken","loading","setLoading","searchTerm","setSearchTerm","currentSearch","setCurrentSearch","handleSearchChange","e","target","value","handleSearchSubmit","populateProductData","handleQuantityChange","quantity","validity","valid","Alert","props","fetchPricebookEntryData","pbeData","requestHeaders","Headers","append","requestOptions","method","headers","redirect","requestUrl","process","env","REACT_APP_API_ENDPOINT","REACT_APP_API_VERSION","REACT_APP_PRICEBOOK_ID","fetch","then","response","text","result","JSON","parse","records","populatePrices","catch","error","console","log","constructPricingBody","data","raw","listPricebookId","candidatePricebookIds","pricingFlow","roundingMode","graph","graphId","referenceId","record","attributes","type","CurrencyIsoCode","index","length","pbe","sellingModel","ProductSellingModel","SellingModelType","pricingTermUnit","PricingTermUnit","pricingTerm","parseInt","PricingTerm","description","Product2","Description","img","DisplayUrl","entry","SalesTransactionId","ProductId","Product2Id","Quantity","ProductSellingModelId","push","stringify","pricedProducts","requestBody","body","pricingData","price","ListPrice","Math","round","toFixed","localStorage","setItem","handleDialogClose","handleSnackbarOpen","handleSnackbarClose","event","reason","addToCart","newCart","quantToAdd","itemInCart","find","item","Name","convertUnitTerm","term","itemList","map","product","Id","title","right","bottom","toLowerCase","color","width","textAlign","getItem","marginTop","margin","position","backgroundColor","marginLeft","justifyContent","marginBottom","display"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nimport useToken from \"./useToken\";\r\nimport analytics from \"../images/demoAnalytics.png\";\r\nimport ownedImg from \"../images/owned.png\";\r\n\r\nconst TERM_DEFINED = \"TermDefined\";\r\nconst ONE_TIME = \"OneTime\";\r\nconst EVERGREEN = \"Evergreen\";\r\n\r\nexport default function Home({ setCart, cart }) {\r\n  const [open, setOpen] = useState(false); // State of popup dialog\r\n  const [selectedProduct, setSelectedProduct] = useState(null); // Product data for popup\r\n  const [selectedQuantity, setSelectedQuantity] = useState(1); // Quantity to use for popup\r\n\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false); // Add to cart confirmation snackbar\r\n  const [products, setProducts] = useState([]); // Array of all products\r\n  const { token, setToken } = useToken(); // Auth token\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [searchTerm, setSearchTerm] = React.useState(); // Real time user input\r\n  const [currentSearch, setCurrentSearch] = React.useState(); // Saved search term after user hits submit\r\n\r\n  // Updates whenever there is a change to the search box\r\n  const handleSearchChange = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  // Handler for the search button being clicked\r\n  async function handleSearchSubmit() {\r\n    setLoading(true);\r\n    setCurrentSearch(searchTerm);\r\n    await populateProductData(); // Refetch product data\r\n  }\r\n\r\n  // Used to handle a change in quantity for adding an item to the cart\r\n  const handleQuantityChange = (e) => {\r\n    const quantity = e.target.validity.valid\r\n      ? e.target.value\r\n      : selectedQuantity;\r\n    setSelectedQuantity(quantity);\r\n  };\r\n\r\n  // Confirmation after items have been added to the cart\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n  // Used to get all active pricebook entries for an org\r\n  async function fetchPricebookEntryData() {\r\n    let pbeData = [];\r\n    let requestHeaders = new Headers();\r\n\r\n    // Use the token acquired at login\r\n    requestHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n    requestHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    let requestOptions = {\r\n      method: \"GET\",\r\n      headers: requestHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    let requestUrl = `${process.env.REACT_APP_API_ENDPOINT}/services/data/v${\r\n      process.env.REACT_APP_API_VERSION\r\n    }/queryAll/?q=SELECT CurrencyIsoCode,Id,IsActive,Name,Pricebook2Id,Product2Id,Product2.DisplayUrl,Product2.Description, ProductSellingModelId,ProductSellingModel.Name,ProductSellingModel.PricingTerm,ProductSellingModel.PricingTermUnit,ProductSellingModel.SellingModelType FROM PricebookEntry WHERE Pricebook2Id = '${`${process.env.REACT_APP_PRICEBOOK_ID}`}' AND IsActive = true AND CurrencyIsoCode = 'USD'`;\r\n\r\n    // If the user has searched for something, add it to the request URL\r\n    if (searchTerm) {\r\n      requestUrl += ` AND Name LIKE '${searchTerm}%25'`;\r\n    }\r\n\r\n    await fetch(requestUrl, requestOptions)\r\n      .then((response) => response.text())\r\n      .then(async (result) => {\r\n        pbeData = JSON.parse(result).records;\r\n        await populatePrices(pbeData, requestHeaders);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  }\r\n\r\n  // Creates the request body for the pricing engine API using all pricebook entries\r\n  function constructPricingBody(data) {\r\n    // Initial body\r\n    let raw = {\r\n      listPricebookId: `${process.env.REACT_APP_PRICEBOOK_ID}`,\r\n      candidatePricebookIds: [`${process.env.REACT_APP_PRICEBOOK_ID}`],\r\n      pricingFlow: \"GET_CATALOG_PRICE\",\r\n      roundingMode: \"RoundHalfUp\",\r\n      graph: {\r\n        graphId: \"1\",\r\n        records: [\r\n          {\r\n            referenceId: \"ref_sales_txn\",\r\n            record: {\r\n              attributes: {\r\n                type: \"SalesTransaction\",\r\n              },\r\n              CurrencyIsoCode: \"USD\",\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    // Go through pricebook entries and construct a body for each one\r\n    let index = 1;\r\n    for (index; index <= data.length; index++) {\r\n      let pbe = data[index - 1];\r\n\r\n      // Additional data processing to add necessary fields to the pbe\r\n      pbe.sellingModel = pbe.ProductSellingModel.SellingModelType;\r\n      pbe.pricingTermUnit = pbe.ProductSellingModel.PricingTermUnit;\r\n      pbe.pricingTerm = parseInt(pbe.ProductSellingModel.PricingTerm);\r\n      pbe.description = pbe.Product2.Description;\r\n      pbe.img = pbe.Product2.DisplayUrl;\r\n\r\n      // Create an entry for 1 of each product\r\n      let entry = {\r\n        referenceId: \"ref_sales_txn_item\" + index,\r\n        record: {\r\n          attributes: {\r\n            type: \"SalesTransactionItem\",\r\n          },\r\n          CurrencyIsoCode: \"USD\",\r\n          SalesTransactionId: \"@{ref_sales_txn.Id}\",\r\n          ProductId: pbe.Product2Id,\r\n          Quantity: \"1.0\",\r\n          ProductSellingModelId: pbe.ProductSellingModelId,\r\n        },\r\n      };\r\n      raw.graph.records.push(entry);\r\n    }\r\n    return JSON.stringify(raw);\r\n  }\r\n\r\n  // Calls the pricing engine API using the request body constructed from pricebook entry data\r\n  async function populatePrices(data, requestHeaders) {\r\n    let pricedProducts = [];\r\n    // Get the full request body to be used for the API call\r\n    let requestBody = constructPricingBody(data);\r\n\r\n    let requestOptions = {\r\n      method: \"POST\",\r\n      headers: requestHeaders,\r\n      body: requestBody,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    await fetch(\r\n      `${process.env.REACT_APP_API_ENDPOINT}/services/data/v${process.env.REACT_APP_API_VERSION}/commerce/pricing/salestransaction/actions/calculate-price`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.text())\r\n      .then((result) => {\r\n        let pricingData = JSON.parse(result);\r\n        let index = 1;\r\n        for (index; index <= data.length; index++) {\r\n          let pbe = data[index - 1];\r\n          // Get the ListPrice value and round it to two decimal places\r\n          let price = pricingData.records[index].record.ListPrice;\r\n          pbe.price = (Math.round(price * 100) / 100).toFixed(2);\r\n          pricedProducts.push(pbe);\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n    setProducts(pricedProducts); // Set the products array after the prices of the products are set\r\n  }\r\n\r\n  // Waits for API calls to finish and product data to populate before terminating loading\r\n  async function populateProductData() {\r\n    await fetchPricebookEntryData();\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    populateProductData();\r\n    localStorage.setItem(\"cart\", JSON.stringify(cart)); // Saves state of cart\r\n  }, [cart]);\r\n\r\n  // Reset values after the popup is closed for an item\r\n  const handleDialogClose = () => {\r\n    setOpen(false);\r\n    setSelectedProduct(null);\r\n    setSelectedQuantity(1);\r\n  };\r\n\r\n  const handleSnackbarOpen = () => {\r\n    setSnackbarOpen(true);\r\n  };\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setSnackbarOpen(false);\r\n  };\r\n\r\n  // Used to facilitate adding items to the cart from the homepage\r\n  const addToCart = () => {\r\n    let newCart = [...cart];\r\n    let quantToAdd = parseInt(selectedQuantity);\r\n    // Check if the item already exists in the cart\r\n    let itemInCart = newCart.find((item) => selectedProduct.Name === item.Name);\r\n    if (itemInCart) {\r\n      itemInCart.quantity += quantToAdd; // Update quantity if already present\r\n    } else {\r\n      // Otherwise create a new item and add to the cart\r\n      itemInCart = {\r\n        ...selectedProduct,\r\n        quantity: quantToAdd,\r\n      };\r\n      newCart.push(itemInCart);\r\n    }\r\n    setCart(newCart);\r\n    handleDialogClose();\r\n    handleSnackbarOpen();\r\n  };\r\n\r\n  // Used to swap wording for pricing term units\r\n  function convertUnitTerm(term) {\r\n    switch (term) {\r\n      case \"Days\":\r\n        return \"daily\";\r\n      case \"Months\":\r\n        return \"monthly\";\r\n      case \"Years\":\r\n        return \"yearly\";\r\n    }\r\n    return term;\r\n  }\r\n\r\n  // Maps all the products to cards\r\n  let itemList = products.map((product) => {\r\n    return (\r\n      <div className=\"card\" key={product.Id}>\r\n        <div className=\"card-border\"></div>\r\n        {product.img && (\r\n          <div className=\"card-image\">\r\n            <img src={product.img} alt={product.title} />\r\n          </div>\r\n        )}\r\n        <span\r\n          to=\"/\"\r\n          className=\"btn-floating halfway-fab waves-effect waves-light green\"\r\n          style={{ right: \"14px\", bottom: \"10px\" }}\r\n          onClick={() => {\r\n            setSelectedProduct(product);\r\n            setOpen(true);\r\n          }}\r\n        >\r\n          <i className=\"material-icons\">add</i>\r\n        </span>\r\n\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">{product.Name}</span>\r\n\r\n          <div>\r\n            <i>{product.description}</i>\r\n            <br />\r\n            <br />\r\n            <p>\r\n              <h6>\r\n                {/* Render the price based on the term - ex. Evergreen is $13 monthly, Term defined is $2 for 12 months */}\r\n                <b>\r\n                  ${product.price}{\" \"}\r\n                  {product.sellingModel == EVERGREEN &&\r\n                    convertUnitTerm(product.pricingTermUnit)}{\" \"}\r\n                  {product.sellingModel === TERM_DEFINED && (\r\n                    <span>\r\n                      for {product.pricingTerm}{\" \"}\r\n                      {product.pricingTermUnit.toLowerCase()}\r\n                    </span>\r\n                  )}\r\n                </b>\r\n              </h6>\r\n            </p>\r\n            <br />\r\n            <br />\r\n          </div>\r\n          {/* Control the content of the dialog based on which product has been selected */}\r\n          {selectedProduct ? (\r\n            <Dialog\r\n              open={open}\r\n              onClose={handleDialogClose}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\">\r\n                {selectedProduct.Name}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText style={{ color: \"black\" }}>\r\n                  Price: ${selectedProduct.price}{\" \"}\r\n                  {selectedProduct.sellingModel != ONE_TIME &&\r\n                    convertUnitTerm(selectedProduct.pricingTermUnit)}{\" \"}\r\n                </DialogContentText>\r\n                <DialogContentText style={{ color: \"black\" }}>\r\n                  {selectedProduct.sellingModel == TERM_DEFINED && (\r\n                    <div>\r\n                      <p>\r\n                        Term: {selectedProduct.pricingTerm}{\" \"}\r\n                        {selectedProduct.pricingTermUnit.toLowerCase()}\r\n                      </p>\r\n                    </div>\r\n                  )}{\" \"}\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogContent>\r\n                <DialogContentText style={{ color: \"black\" }}>\r\n                  Quantity:\r\n                  <input\r\n                    style={{ width: \"35%\", textAlign: \"center\" }}\r\n                    type=\"text\"\r\n                    pattern=\"[1-9][0-9]*\"\r\n                    onInput={handleQuantityChange}\r\n                    value={selectedQuantity}\r\n                  />\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleDialogClose} color=\"primary\">\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={addToCart} color=\"primary\" autoFocus>\r\n                  Add to cart\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Snackbar\r\n            open={snackbarOpen}\r\n            autoHideDuration={6000}\r\n            onClose={handleSnackbarClose}\r\n          >\r\n            <Alert onClose={handleSnackbarClose} severity=\"success\">\r\n              Item added to cart!\r\n            </Alert>\r\n          </Snackbar>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"page-header\">\r\n        <div style={{'padding-left': '1em'}}><h5>Store</h5>Hello {localStorage.getItem('userName')}, welcome to SmartBytes web store.</div>\r\n        <img className=\"header-image\" src={analytics}/>\r\n      </div>\r\n      <h5 className=\"center\" style={{ marginTop: \"3%\" }}>\r\n        Products\r\n      </h5>\r\n      <div style={{ margin: \"auto\", width: \"35%\" }}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search for a product\"\r\n          value={searchTerm}\r\n          onChange={handleSearchChange}\r\n        />\r\n        <button\r\n          style={{\r\n            position: \"absolute\",\r\n            color: \"white\",\r\n            backgroundColor: \"#13334C\",\r\n            marginLeft: \"1vw\",\r\n          }}\r\n          type=\"button\"\r\n          className=\"btn btn-default\"\r\n          onClick={handleSearchSubmit}\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n      {!currentSearch ? (\r\n        <h6 style={{ textAlign: \"center\" }}>Showing all results</h6>\r\n      ) : (\r\n        <h5 style={{ textAlign: \"center\" }}>\r\n          Showing results for \"{currentSearch}\"\r\n        </h5>\r\n      )}\r\n      {!loading ? (\r\n        <div>\r\n          {products.length === 0 ? (\r\n            <h5 style={{ textAlign: \"center\" }}>No products found.</h5>\r\n          ) : (\r\n            <div\r\n              className=\"box\"\r\n              style={{\r\n                marginTop: \"4vh\",\r\n                justifyContent: \"space-evenly\",\r\n                marginBottom: \"10vh\",\r\n              }}\r\n            >\r\n              {itemList}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <img\r\n          style={{ margin: \"auto\", display: \"flex\" }}\r\n          src=\"https://miro.medium.com/max/1080/0*DqHGYPBA-ANwsma2.gif\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}